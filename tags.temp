!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Java	a,annotation	/annotation declarations/
!_TAG_KIND_DESCRIPTION!Java	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Java	e,enumConstant	/enum constants/
!_TAG_KIND_DESCRIPTION!Java	f,field	/fields/
!_TAG_KIND_DESCRIPTION!Java	g,enum	/enum types/
!_TAG_KIND_DESCRIPTION!Java	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Java	m,method	/methods/
!_TAG_KIND_DESCRIPTION!Java	p,package	/packages/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Java	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ruben/Tareas/EstructurasBaseDatos/Insert/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!Java!package	imported	/imported package/
Alumno	Alumno.java	/^    Alumno(String nombre, int nControl, int calif, String carrera) {$/;"	m	class:Alumno
Alumno	Alumno.java	/^public class Alumno {$/;"	c
CALIFICACION	insertMetodo.java	/^    static final int CALIFICACION = 2;$/;"	f	class:insertMetodo
CARRERA	insertMetodo.java	/^    static final int CARRERA = 3;$/;"	f	class:insertMetodo
IncersionMetodoPorCampo	insertMetodo.java	/^    public static void IncersionMetodoPorCampo(Alumno []array,int campo, boolean inverso) {$/;"	m	class:insertMetodo
NCONTROL	insertMetodo.java	/^    static final int NCONTROL = 1;$/;"	f	class:insertMetodo
NOMBRE	insertMetodo.java	/^    static final int NOMBRE = 0;$/;"	f	class:insertMetodo
calif	Alumno.java	/^    private int calif, nControl;$/;"	f	class:Alumno	file:
carrera	Alumno.java	/^    private String nombre,  carrera;$/;"	f	class:Alumno	file:
comparator	insertMetodo.java	/^    public static boolean comparator(Alumno alumnos[], int k, Alumno aux, int field,boolean inve/;"	m	class:insertMetodo
getCalificacion	Alumno.java	/^    public int getCalificacion() {$/;"	m	class:Alumno
getCarrera	Alumno.java	/^    public String getCarrera() {$/;"	m	class:Alumno
getNControl	Alumno.java	/^    public int getNControl() {$/;"	m	class:Alumno
getNombre	Alumno.java	/^    public String getNombre() {$/;"	m	class:Alumno
insertMetodo	insertMetodo.java	/^class insertMetodo {$/;"	c
main	insertMetodo.java	/^    public static void main(String main[]) {$/;"	m	class:insertMetodo
nControl	Alumno.java	/^    private int calif, nControl;$/;"	f	class:Alumno	file:
nombre	Alumno.java	/^    private String nombre,  carrera;$/;"	f	class:Alumno	file:
printArray	insertMetodo.java	/^    public static void printArray(Alumno[] objs) {$/;"	m	class:insertMetodo
toString	Alumno.java	/^    public String toString() {$/;"	m	class:Alumno
